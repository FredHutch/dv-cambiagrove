params.input.type = "RDS"
params.input.exp = "s3://vis.fredhutch.singlecell.pipeline/data/exp.rds"
params.input.col = "s3://vis.fredhutch.singlecell.pipeline/data/col.rds"
params.input.row = "s3://vis.fredhutch.singlecell.pipeline/data/row.rds"
params.output.folder = "s3://vis.fredhutch.singlecell.pipeline/data/results"
params.monocle3.preprocess.method = ['PCA']
params.monocle3.preprocess.num_dim = [5,25,50]       
params.monocle3.preprocess.norm_method = ['log']  
params.monocle3.preprocess.use_genes = 'NULL'
params.monocle3.preprocess.residual_model_formula_str = 'NULL'
params.monocle3.preprocess.pseudo_count = [1.0]
params.monocle3.reduce_dim.max_components = [2]  
params.monocle3.reduce_dim.steps = ['PCA-UMAP']
params.monocle3.cluster.resolution = "NULL"
params.monocle3.cluster.k = [20]
params.monocle3.cluster.louvain_iter = [1]
params.monocle3.cluster.partition_qval = [0.05]
params.monocle3.cluster.weight = ["FALSE"] 
params.monocle3.partition.reduction_method = ['UMAP']
params.monocle3.partition.knn = [20]
params.monocle3.partition.weight = "NULL"
params.monocle3.partition.louvain_iter = [1]
params.monocle3.partition.resolution = "NULL"
params.monocle3.partition.partition_qval = [0.05]
params.monocle3.learn_graph.no_partition = "NULL"
params.monocle3.learn_graph.no_close_loop = "NULL"
params.monocle3.learn_graph.euclidean_distance_ratio = [1]
params.monocle3.learn_graph.geodesic_distance_ratio = [0.333]
params.monocle3.learn_graph.no_prune_graph = "NULL"
params.monocle3.learn_graph.minimal_branch_len = [10]
params.monocle3.learn_graph.orthogonal_proj_tip = "NULL"
params.monocle3.order_cells.reduction_method = ["UMAP"]
params.monocle3.order_cells.root_pr_nodes = "NULL"
params.monocle3.order_cells.root_cells = "NULL" 
params.monocle3.order_cells.cell_phenotype = ["cao_cell_type"]        
params.monocle3.diff_exp.neighbor_graph = ["principal_graph", "knn"]
params.monocle3.diff_exp.reduction_method = "UMAP"
params.monocle3.diff_exp.knn = [25]
params.monocle3.diff_exp.method = "Moran_I"
params.monocle3.diff_exp.alternative = ["greater"]     // ["greater", "less", "two.sided"]
params.monocle3.diff_exp.expression_family = "quasipoisson"
params.seurat.filter_cells.subset_names = "NULL"
params.seurat.filter_cells.low_threshold = -100000000
params.seurat.filter_cells.high_threshold = 100000000
params.seurat.filter_cells.cells_use = "NULL"
params.seurat.normalize.assay_type = ['RNA']
params.seurat.normalize.normalization_method = ['LogNormalize']
params.seurat.normalize.scale_factor = [1000]
params.seurat.variable_genes.mean_function = ["ExpMean"]
params.seurat.variable_genes.dispersion_function = ["LogVMR"]
params.seurat.variable_genes.fvg_x_low_cutoff = [0.1]
params.seurat.variable_genes.fvg_y_low_cutoff = [8]
params.seurat.variable_genes.fvg_x_high_cutoff = [1]
params.seurat.variable_genes.fvg_y_high_cutoff = ["Inf"]
params.seurat.scale_data.genes_use = "NULL"
params.seurat.scale_data.vars_to_regress = "NULL"
params.seurat.scale_data.model_use = ["linear"]  
params.seurat.scale_data.use_umi = "NULL"  
params.seurat.scale_data.do_scale = "TRUE"
params.seurat.scale_data.do_center = "TRUE"
params.seurat.scale_data.scale_max = [10]
params.seurat.scale_data.block_size = [1000]
params.seurat.scale_data.min_cells_to_block = [1000]
params.seurat.scale_data.assay_type = ["RNA"]
params.seurat.scale_data.check_for_norm = "TRUE"
params.seurat.pca.pc_genes = "NULL"
params.seurat.pca.pcs_compute = [20]
params.seurat.pca.use_imputed = ["FALSE"]
params.seurat.tsne.reduction_use = ["PCA"]   // ["PCA". "ICA"]
params.seurat.tsne.cells_use = "NULL"
params.seurat.tsne.dims_use = "NULL"
params.seurat.tsne.genes_use = "NULL"
params.seurat.tsne.do_fast = ["TRUE"]
params.scanpy.filter_cells.min_counts = 1500
params.scanpy.filter_cells.min_genes = 500
params.scanpy.filter_cells.max_counts = 'Inf'
params.scanpy.filter_cells.max_genes = 'Inf' 
params.scanpy.filter_genes.min_cells = 5
params.scanpy.filter_genes.min_counts = '-Inf'
params.scanpy.filter_genes.max_cells = 'Inf'
params.scanpy.filter_genes.max_counts = 'Inf'
params.scanpy.normalise_data.scale_factor = 10000
params.scanpy.find_variable_genes.flavor = 'seurat'
params.scanpy.find_variable_genes.min_mean = 0.0125
params.scanpy.find_variable_genes.max_mean = 3
params.scanpy.find_variable_genes.min_disp = 0.5
params.scanpy.find_variable_genes.max_disp = 'Inf'
params.scanpy.find_variable_genes.n_bins = 20
params.scanpy.find_variable_genes.n_top_genes = 'None'
params.scanpy.scale_data.do_log = 'true'
params.scanpy.scale_data.vars_to_regress = 'n_counts'
params.scanpy.scale_data.zero_centre = 'true'
params.scanpy.scale_data.scale_max = 'none'
params.scanpy.pca.n_pcs = 9
params.scanpy.pca.zero_centre = 'true'
params.scanpy.pca.svd_solver = 'auto' 
params.scanpy.pca.random_seed = 1234
params.scanpy.pca.chunked = 'false'  
params.scanpy.pca.chunk_size = 'none'
params.scanpy.pca.color_by = 'none'
params.scanpy.pca.use_raw = 'false'
params.scanpy.pca.edges = 'false'
params.scanpy.pca.arrows = 'false'
params.scanpy.pca.sort_order = 'true'
params.scanpy.pca.groups = 'none'
params.scanpy.pca.projection = '2d' 
params.scanpy.pca.components = '1,2' 
params.scanpy.pca.palette = 'None'
params.scanpy.pca.frame = 'true'
params.scanpy.neighbours.n_neighbours = 15
params.scanpy.neighbours.n_pcs = 9  
params.scanpy.neighbours.use_rep = 'none'
params.scanpy.neighbours.knn = 'false'
params.scanpy.neighbours.random_seed = 1234
params.scanpy.neighbours.method = 'umap'
params.scanpy.neighbours.metric = 'euclidean'
params.scanpy.find_clusters.flavor = 'vtraag'
params.scanpy.find_clusters.restrict_to = 'none'
params.scanpy.find_clusters.key_added = 'louvain'
params.scanpy.find_clusters.use_weights = 'false' 
params.scanpy.find_clusters.random_seed = 1234 
params.scanpy.find_clusters.resolutions = [ '0.1', '0.3', '0.5', '0.7', '1.0', '2.0', '3.0', '4.0', '5.0' ]
params.scanpy.run_umap.min_dist = 0.5
params.scanpy.run_umap.spread = 1
params.scanpy.run_umap.n_components = 2
params.scanpy.run_umap.maxiter = 'none'
params.scanpy.run_umap.alpha = 1
params.scanpy.run_umap.gamma = 1
params.scanpy.run_umap.negative_sample_rate = 5
params.scanpy.run_umap.init_pos = 'spectral'
params.scanpy.run_umap.random_seed = 1234
params.scanpy.run_umap.a = 'none'
params.scanpy.run_umap.b = 'none'
params.scanpy.run_umap.use_raw = 'false'
params.scanpy.run_umap.color_by = 'none'
params.scanpy.run_umap.edges = 'false'
params.scanpy.run_umap.arrows = 'false'
params.scanpy.run_umap.groups = 'none'
params.scanpy.run_umap.projection = '2d'
params.scanpy.run_tsne.n_components = 2
params.scanpy.run_tsne.use_rep = 'none'
params.scanpy.run_tsne.perplexities = [ 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50 ]
params.scanpy.run_tsne.early_exaggeration = 12
params.scanpy.run_tsne.learning_rate = 1000
params.scanpy.run_tsne.components = '1,2' 
params.scanpy.run_tsne.palette = 'None'
params.scanpy.run_tsne.frame = 'true'
params.scanpy.run_tsne.random_seed = 1234
params.scanpy.run_tsne.projection = '2d'  
params.scanpy.find_markers.groupby = 'louvain'
params.scanpy.find_markers.groups = 'none'
params.scanpy.find_markers.reference = 'rest'
params.scanpy.find_markers.n_genes = 100
params.scanpy.find_markers.method = 't-test_overestim_var'
params.scanpy.find_markers.rankby_abs = 'false'
params.scanpy.find_markers.use_raw = 'true'
params.scanpy.find_markers.show_n_genes = 10
params.scanpy.find_markers.key = 'none'